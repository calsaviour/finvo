service: finance-service-transactions

frameworkVersion: '2'

plugins:
  - serverless-offline
  - serverless-dotenv-plugin
  - serverless-bundle
  - serverless-pseudo-parameters

package:
  individually: true
  excludeDevDependencies: true

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221
  stage: ${opt:stage, 'dev'}
  region: 'us-east-1'
  tracing: 
    apiGateway: true
    lambda: true
  
  environment:
    TRANSACTIONS_TABLE: ${self:provider.stage}-DB-FS-Transactions
    ACCOUNTS_TABLE: ${self:provider.stage}-DB-FS-Accounts
  
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:GetItem
        - dynamodb:Scan
        - dynamodb:DeleteItem
      Resource:
        - 'Fn::ImportValue': ${self:provider.stage}-DB-FS-TransactionsArn

functions:
  createTransaction:
    handler: handlers/create.handler
    events:
      - http:
          path: /transactions
          method: post
          cors: true
  getTransaction:
    handler: handlers/retrieve.handler
    events:
      - http:
          path: /transactions/{id}/{accountId}
          method: get
          cors: true
  deleteTransaction:
    handler: handlers/delete.handler
    events:
      - http:
          path: /transactions/{id}/{accountId}
          method: delete
          cors: true
  findTransactions:
    handler: handlers/find.handler
    events:
      - http:
          path: /transactions/{accountId}
          method: post
          cors: true       
